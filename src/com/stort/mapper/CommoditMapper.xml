<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stort.dao.CommoditMapper">
  <resultMap id="BaseResultMap" type="com.stort.bean.Commodit">
    <id column="number" jdbcType="INTEGER" property="number" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="shopnum" jdbcType="INTEGER" property="shopnum" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="intro" jdbcType="VARCHAR" property="intro" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    number, name, date, price, shopnum, photo, intro
  </sql>
  <select id="selectByExample" parameterType="com.stort.bean.CommoditExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from commodit
    where number = #{number,jdbcType=INTEGER}
  </select>
  <select id="selectByShopNum" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from commodit
    
    where shopnum = #{shopnum,jdbcType=INTEGER}
    
  </select>
  <select id="selectBySearch" parameterType="String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from commodit
    <where>
    	intro LIKE CONCAT('%',#{searchText},'%')
    	or
    	name LIKE CONCAT('%',#{searchText},'%')
    </where>
    order by number   
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from commodit
    where number = #{number,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.stort.bean.CommoditExample">
    delete from commodit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stort.bean.Commodit">
    insert into commodit (number, name, date, 
      price, shopnum, photo, 
      intro)
    values (#{number,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, 
      #{price,jdbcType=DOUBLE}, #{shopnum,jdbcType=INTEGER}, #{photo,jdbcType=VARCHAR}, 
      #{intro,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.stort.bean.Commodit">
    insert into commodit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="number != null">
        number,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="shopnum != null">
        shopnum,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="intro != null">
        intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="shopnum != null">
        #{shopnum,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stort.bean.CommoditExample" resultType="java.lang.Long">
    select count(*) from commodit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update commodit
    <set>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.shopnum != null">
        shopnum = #{record.shopnum,jdbcType=INTEGER},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.intro != null">
        intro = #{record.intro,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update commodit
    set number = #{record.number,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      price = #{record.price,jdbcType=DOUBLE},
      shopnum = #{record.shopnum,jdbcType=INTEGER},
      photo = #{record.photo,jdbcType=VARCHAR},
      intro = #{record.intro,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stort.bean.Commodit">
    update commodit
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="shopnum != null">
        shopnum = #{shopnum,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=VARCHAR},
      </if>
    </set>
    where number = #{number,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stort.bean.Commodit">
    update commodit
    set name = #{name,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      price = #{price,jdbcType=DOUBLE},
      shopnum = #{shopnum,jdbcType=INTEGER},
      photo = #{photo,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR}
    where number = #{number,jdbcType=INTEGER}
  </update>
</mapper>